
import numpy as np
import matplotlib.pyplot as plt


# Sampling parameters
sampling_freq = 100  # Sampling frequency in Hz
num_samples = 1000    # Number of samples to acquire

# analysis variables
window_size = 20 # for calculating intensities- it's the sample number
tremor_window = (3, 17)  # bounds of data we are using for analysis in Hz
intensity_threshold = 0.025


# functions
def generate_sine_wave(frequency1, amplitude1, duration1, sampling_rate1):
    t = np.linspace(0, duration1, int(duration1 * sampling_rate1), endpoint=False)
    signal = amplitude1 * np.sin(2 * np.pi * frequency1 * t)
    return signal


def tremor_window_fft(fft_result, fft_freq, tremor_window1):  # t window is lower than the upper bound in hz
    new_fft_result = []
    new_fft_freq = []
    for i in range(len(fft_freq)):
        if (abs(fft_freq[i]) >= tremor_window1[0]) and (abs(fft_freq[i]) <= tremor_window1[1]):
            new_fft_result.append(fft_result[i])
            new_fft_freq.append(fft_freq[i])
    return new_fft_result, new_fft_freq
# Function to perform FFT and find the dominant frequency


def analyze_frequency(signal):

    # Perform FFT on the signal
    fft_result = np.fft.fft(signal)
    fft_freq = np.fft.fftfreq(len(signal), (1 / sampling_freq))
    tremor_n = len(dominant_frequency_array) +1
    fft_freq_positive = fft_freq[:len(signal) // 2]

    plt.plot(fft_freq_positive, np.abs(fft_result[:len(signal) // 2]))
    plt.title('Frequency Composition of Tremor ' + str(tremor_n))
    plt.xlabel('Frequency Hz')
    plt.ylabel('Intensity')
    plt.show()
    fft_result, fft_freq = tremor_window_fft(fft_result, fft_freq, tremor_window)

    # Find the index of the maximum magnitude in the FFT result
    if len(fft_result) > 0:
        max_index = np.argmax(np.abs(fft_result))
        # Extract the dominant frequency
        dominant_freq = abs(fft_freq[max_index])
    else:
        dominant_freq = 0
    return dominant_freq


def calculate_intensity(signal):
    ''' the input of this function is a small sample of the signal in the window size.
     The values have to be positive so i will square the input signal'''
    # Calculate the area under the curve using the trapezoidal rule
    signal_array = np.array(signal)
    signal_squared = signal_array*signal_array
    area = np.trapz(signal_squared)
    intensity1 = area / window_size
    return intensity1


def calculate_tremor_length_intensity(tremor_intensities1):
    length = len(tremor_intensities1)*window_size/sampling_freq # length of time of tremor
    total_intensity = 0
    for j in tremor_intensities:
        total_intensity += j
    if length != 0:
        average_intensity = total_intensity/len(tremor_intensities1)

    else:
        average_intensity = 0
    return length, average_intensity


def calculate_values_and_append(tremor_intensities1, tremor_data1):
    length, average_intensity = calculate_tremor_length_intensity(tremor_intensities1)
    dominant_frequency = analyze_frequency(tremor_data1)


    dominant_frequency_array.append(dominant_frequency)
    length_array.append(length)
    average_intensity_array.append(average_intensity)

def readjoystickTextFile(fileName):
    data = []
    xPos_vector = []
    yPos_vector = []
    iteration = []
    j = 0
    with open('./JoystickTextFiles/{}'.format(fileName), 'r') as file:
        for line in file:
            j += 1
            nums = ((line.strip().split(','))) # Convert each line to a float and append to the data list
            values = []
            for i in range(3):
                values.append(float(nums[i]))
            xPos_vector.append(values[1])
            yPos_vector.append(values[2])
            iteration.append(j)
    return xPos_vector, yPos_vector

# Main loop for signal acquisition and analysis

'''listXPOS, listYPOS = readjoystickTextFile(fileName = 'tremor_simulator_100HZ.txt')
position= []
for i in range(len(listXPOS)-1):
    position.append( listXPOS[i] + listYPOS[i]*1j)
plt.plot(listXPOS)
plt.plot(listYPOS)
plt.plot(position)
plt.show()'''

# arrays for analysis
signal_buffer = []
dominant_frequency_array = []
length_array = []
average_intensity_array = []
tremor_data = []
tremor_intensities = []
intensity_of_whole_signal = []
# initial conditions
tremor_present = False  # initial cond for the loops to work
i = 0
tremor_count = 0
input_data = [-0.010523924570242996, -0.012744709273537822, -0.013493383916334537, -0.01235046602026694, -0.010796538126005083, -0.00878833185917242, -0.005758386599972534, -0.004155546860642033, -0.002323483990223113, -0.0006028510953445254, 0.00014109538775002733, 0.0005099564722042538, 0.0006794327171378532, 0.0007287498919811286, 0.001032985891023852, 0.0011049099864130461, 0.0012391669226539323, 0.001017837630125886, 0.0009713096408497067, 0.0009446590685999873, 0.0012098013568432493, 0.0012732628759515863, 0.0012768915925504033, 0.001239188239596175, 0.0009601701062178537, 0.0008812715283652087, 0.000879619006141176, 0.0008810150434510645, -0.00019798810363336888, 0.000597973273924482, 0.000901571728904968, 0.001362772932618505, 0.0012403830365636942, 0.00018279752121200254, 0.0020335673043652205, 0.001528798153373357, 0.001387120900143004, 0.0012803863873061087, 0.0014271450709049012, 0.0014062688314006762, 0.0014068343338571009, 0.001103421967322337, 0.0012868366679311231, 0.0009026889549883545, 0.0011668470562192154, 0.0009512538210938101, 0.000887913078387606, 0.0008432633482732994, 0.0008714748128927086, 0.000901897495515204, 0.0012249878748453666, 0.0010403893123813492, 0.0012832431638774566, 0.001061634381794678, 0.0010242425273733272, 0.000993713006310612, 0.0009942154148940563, 0.0007143515762487659, 0.0009176746378359683, 0.0009807487765152029, 0.0018597929628010532, 0.0018201369175702142, 0.0015325718151107705, 0.001099994654467109, 0.0009463531550423614, 0.00032935830510455455, -0.00036863232222082015, 0.0007840767200146051, 0.0006511070617940401, 0.001200616735612444, 0.0014415350640933217, 0.0013366026169112644, 0.001303183270673039, 0.0021180515126947123, 0.001507790699203676, 0.0012496452806123985, 0.0009818985966759987, 0.0012017784439924163, 0.0006626428856874901, 0.0008098050678831507, 0.0011376511033194987, 0.0007203164580947309, 0.0011175057359821654, 0.001059450714878122, 0.0013238627533361386, 0.0011078834581060189, 0.0010449514578176368, 0.0012998416108090348, 0.0010831090059907414, 0.0009901795749626616, 0.0009882381721940323, 0.0009549276878531784, 0.0009716059887748957, 0.00098048791977828, 0.0020901264361989393, 0.0015808281100497014, 0.0011114175254021766, 0.0006609721932234469, 0.0008082056514138111, 0.0008383804828299458, 0.0008740965650758797, 0.0011381144237399797, 0.001222842412758704, 0.0017558940001357118, 0.0011836468383661335, 0.0012845086199267247, 0.0009947560490628851, 0.0011479123276466746, 0.0008752686662275543, 0.0007994693815110768, 0.0007411715902094947, 0.00050163994323002, 0.0007255508846940352, 0.000911201801068913, 0.0017956468293470473, 0.0015280355190554588, 0.0011506716753836889, 0.0004716991133675054, 0.0011002658474728241, 0.001008252065905619, 0.0012824958953777839, 0.0010207657043768102, 0.0009535626769167464, 0.0008953984254486472, 0.0017970771537739842, 0.0012531367091411331, 0.0010831019173860555, 0.0009145114114628532, 0.000906002760633861, 0.0008806545508310212, 0.0009188231808733745, 0.001190506815067622, 0.0010033336965782208, 0.0009305066227799225, 0.0012598374249439236, 0.001361984108930913, 0.001100938529976829, 0.0007339983351565965, 0.001695940764090166, 0.0014243521853240133, 0.001047176422094214, 0.0011750089727694188, 0.0009385163512100753, 0.0008388419042446027, 0.0008330692899760385, 0.0011290943155301096, 0.0009439707255658389, 0.0011173544980782532, 0.0009619217758184001, 0.0009545622173990492, 0.0009330754111182386, 0.0007005527455474711, 0.0011728255679810638, 0.0007835850034805386, 0.0009473126883253885, 0.001021397366243338, 0.0008017592656462645, 0.001034156602085494, 0.0011320007433237161, 0.0006284905316087906, 0.0013128886946360135, 0.0012252383430251049, 0.0012501815646345851, 0.0014768248534145524, 0.0015469843006252343, 0.0012657524473448124, 0.0011360451295446515, 0.0010709916811113655, 0.0010556810743574951, 0.0009799123222927059, 0.0009832187847314752, -9.387615793756895e-05, 0.0009714131580764659, 0.0013463941989246345, 0.0020788036621039833, 0.0014237422792579835, 0.001218160816499489, 0.0013580829913421959, 0.001146305046836587, 0.00023193925557894735, 0.0008031880421782295, 0.0011323094673647838, 0.0010193254868745838, 0.0009915202997487736, 0.0010840888019598878, 0.0011166691410124524, 0.0011334031022475072, 0.0011673574289251323, 0.0011855173874326247, 0.0008286398690556494, 0.00045062378878314366, 0.0009342883668361085, 0.0021927491897486863, 0.001480967188856954, 0.001231323594175264, 0.0011019432931475524, 0.0021519480898255783, 0.0024032772120246328, 0.0016074741225354065, 0.0009452863709288224, 0.0006332231599639991, 0.0004921033469756676, 0.0005696745718905619, 0.0005977721814871655, 0.0006111102391044253, 0.0006144798137754717, 0.0018162231810599921, 0.0011988834556231655, 0.0012979373232198214, 0.0009940349591659806, 0.00091356040901832, 0.0008468232638127425, 0.0008483850654998765, 0.0008253556487909479, 0.0008355721846523174, 0.0010928588110817317, 0.0010238650301513906, 0.001004250098614521, 0.001289334815277765, 0.001104369916312395, 0.0007656042612933199, 0.002818448834845829, 0.0017555230147378934, 0.0008375671229565382, 0.0007178053088410519, 0.0007371917797554112, 0.0009852478845089226, 0.0008017077705572417, 0.0007496274595057834, 0.0007379376213645233, 0.0009645461176449044, 0.000965158774826752, 0.0010172730504001554, 0.0012611868563354202, 0.0010633154651516936, -0.04346722351857979, -0.07750419698721686, -0.01661462909469956, 0.006240839110223655, -0.3163444726422066, -0.6129502943354848, -0.669251823435723, -0.6002073188089374, -0.20549405376502833, 0.17969331111455544, 0.33153644465827026, -0.1631867897025731, -0.2841232358496516, -0.279442661083634, -0.24316129097277084, -0.16331617821994115, 0.337163078822828, 0.4632280951053677, 0.5002606593789023, 0.49641525410273973, -0.0046050184496264635, -0.23055869350795988, -0.15113936347311807, 0.23216724747513612, 0.31402449379455166, 0.29843459297112046, 0.2635533176922899, 0.23146553467966094, 0.26815102481893416, 0.28491303051990613, 0.03408971071889552, -0.4508393868069639, -0.62215465593606, -0.3602324651276868, 0.04763450041537076, 0.20732764680594706, 0.2723241707564641, 0.07140106950453945, -0.027360046512648284, 0.2249806346280533, 0.30666030858025545, 0.01834609451066188, -0.41205811246877305, -0.5509464050130695, -0.35026937685648313, 0.11803384807250655, 0.29994725346315915, 0.353554138434639, -0.040949207089839956, -0.2551843440525519, -0.09797957388085421, 0.270172597288729, 0.1601424855100776, -0.27337050927684325, -0.427019261864628, -0.23247005406289722, 0.2351308279679717, 0.4184713989324159, 0.4528132575617943, 0.34522854225211075, 0.3386489791350048, 0.3304184708610876, 0.31097581567025967, -0.16298718146991692, -0.5040928001614029, -0.6222280976851162, -0.20190305948256404, -0.029295377132923628, -0.3384595875159016, -0.40431490040280693, -0.08845245010482516, 0.3292075673914727, -0.05187439359860757, -0.1702464668958512, -0.23006321409218278, -0.08003076928420749, 0.37618267212467354, 0.5454256954685861, 0.4321026761940129, 0.32082750799111526, 0.2434782352382895, -0.01341606079633606, -0.007473552429050345, 0.23154169036798622, 0.2641387885430214, -0.011364728231362808, 0.019341355077696465, 0.1772284230187034, 0.22836814480025913, 0.06932948251481075, 0.039245476620304504, 0.1267736009259658, 0.13050059913746487, 0.060979914976419136, -0.2655968511509163, -0.2883572908215124, 0.006357405581817577, 0.12351504976911849, -0.37288168763687496, -0.5163706224157047, -0.5377988342020372, -0.17839391186288106, 0.23162630194418404, 0.39382297406907313, 0.25023964833487194, -0.20106952228499736, -0.31606713575298406, -0.1776526722347227, 0.28681186208772325, 0.13796254442369538, 0.028880207903067445, 0.2696379783147296, 0.3696069984511642, -0.138760308939334, -0.28294170565922994, -0.3520029848675774, -0.3698922868356822, -0.03483159128334978, -0.21572755128822152, -0.24421653115526487, -0.2351015170224855, 0.24302294915800593, 0.03230885444869647, -0.03013914955939423, -0.0731883833608119, -0.0747228287612931, 0.19803611608253968, 0.5753467710009924, 0.27929618034902537, -0.011996229382189694, 0.0829195061939012, 0.00015615297563587038, 0.18920793395721947, -0.0821435295577968, -0.17993581219443722, -0.2310345734783873, -0.20960251187194923, -0.14566565393388542, -0.09216267427124658, -0.07687886598489801, 0.10232141205590672, 0.01743780797771155, 0.029363783154094714, 0.02621105243591093, 0.43542971441756684, 0.3895728434123851, 0.09928523675490686, -0.02276807956469995, -0.02237795803196374, 0.3375858723432459, 0.029926340244744165, -0.07883522289657252, -0.13077466588981068, 0.3584722839172727, 0.07791646283387232, -0.04292188919538975, -0.11023565468922769, -0.1222882602303258, -0.13733659309777235, 0.1663293298307863, 0.3628183648048411, 0.0402972538090669, -0.08649657943053835, -0.03961670928878469, 0.31390497546753604, 0.030167540340447885, -0.06585883325481967, -0.11576846507768668, 0.05684993108419467, 0.03762380262985032, -0.03257089363260868, -0.06525587162779456, -0.0712438758648748, -0.07388100242476114, -0.028717534669420397, -0.0115801918401649, -0.003986460184265184, -0.0012234987216190873, 0.021163321051499207, 0.13646597959667872, 0.07548087151707317, 0.054768020848357635, 0.04353328414929969, 0.04485762540643479, 0.2650299492416788, 0.09837374915326036, 0.03896476837048046, 0.008792010385270221, 0.2444389020108939, 0.06920475164084261, 0.012947673902148238, -0.021451834108897283, 0.0375783666367796, 0.012159672382381803, 0.0017657932102737028, -0.006873724744528076, -0.0029181680796167564, 0.11156411749347717, 0.05074935297283645, 0.030530317576191957, 0.019060593633285383, 0.4566949851148153, 0.13953431795524907, 0.03310798010469573, -0.02633223412716812, 0.012380837147531132, 0.03617384872763307, -0.014572465947396251, -0.04077189957928429, -0.04642650586294195, 0.24009656288407433, 0.07431154789734906, 0.024136982615558078, -0.0072466620887564615, -0.014409657411672105, -0.016332546712937046, -0.006790323875605742, -0.006027557681802076, 0.0003841683157381759, -0.00048504734377297076, 0.031992389240260044, 0.04454661818872041, 0.05153502895677109, 0.18042110827016722, 0.08650704386893815, 0.05858840344118543, 0.03952111755147847, 0.0355700244900472, 0.03117591249533125, 0.03223737111419123, 0.03055106228500737, 0.03182052766576615, 0.21150135520725866, 0.09314940206170008, 0.05298632282293725, 0.0310825275570078, 0.027370528991998988, 0.02164615527270186, 0.02282904017412868, 0.02336167218271812, 0.02259047638826628, 0.020441848179613586, 0.041470337964412574, 0.11895100518477508, 0.0713825275296619, 0.05521671274471274, 0.042832193670287566, 0.0438316445004292, 0.0413592461658312, 0.04340355848155508, 0.04297019600094654, 0.04382812496761024, 0.04358250994215718, 0.05272708210110211, 0.05510280135920187, 0.05614359608835162, 0.2832554203272891, 0.11567243616514056, 0.05772329748841065, 0.026762315575459827, 0.36430125944205694, 0.10307179456992921, 0.016937446803565015, -0.0328321616152103, -0.04012926978703957, -0.053618682031585374, -0.024779946857481416, -0.015267005040579873, -0.010904403138955354, 0.28226906746449376, 0.1049367887911472, 0.046711148410336634, 0.0131879821245392, 0.011078949676678329, -0.001481883093100489, 0.0008798714836297794, -0.003395100684911778, -0.0003338788454356756, -0.002218547860795672, 0.03271131203381117, 0.05031931203967721, 0.053129014549803566, 0.054627360361532595, 0.05516414302858097, 0.05560234305031586, 0.05537212207165676, 0.0539950359393353, 0.05489739598493437, 0.05529890462355169, 0.05572275902429613, 0.05763236298913488, 0.05659211473035408, 0.056242901998768025, 0.2630332181024698, 0.11032958402793558, 0.061146472044394495, 0.033210438662179986, 0.024571296182407387, 0.016275635766021646, 0.015331713017176396, 0.013662721920410181, 0.01566336359014886, 0.08484097374263677, 0.05703583072770346, 0.0488596932819616, 0.0440925748402623, 0.05851715163864424, 0.04637460649346581, 0.043463149881134644, 0.04048515459374835, 0.04061948686040151, 0.039565574862776565, 0.04988612148090743, 0.051612803372125704, 0.0528024623467962, 0.31685721996792116, 0.1227436344418622, 0.05700646458465686, 0.021646903003856188, 0.014887546299905852, 0.005984263087884356, 0.007501281134154825, 0.004073806793698953, 0.006208469089896473, 0.00416948547748186, 0.037906919816852014, 0.04743424356442416, 0.04906728734659449, 0.05357852138347208, 0.05534541897537726, 0.2072593980215719, 0.09599656235165177, 0.05792905620370847, 0.04069100463522557, 0.034064178571260095, 0.12041398055867414, 0.05280292565747924, 0.026739713885755467, 0.015341921467245445, 0.01144971498978875, 0.08076366917775724, 0.12244437185520385, 0.056046293073867326, 0.03135173092076471, 0.019202974041889975, 0.13763602829048482, 0.4137286889347215, 0.12449981724220638, 0.019026444480443883, 0.014174351482943437, 0.5186718302228233, 0.21235962090020488, -0.0065426293067433194, 0.08330444211695032, 0.45628806957896634, 0.2691689216788304, -0.05340619649308409, -0.18792857031380894, -0.23892025553079432, -0.00920117672410603, 0.4092288591423065, 0.5236902216206113, 0.30298897109407313, 0.05891000838483529, 0.1973035133681339, 0.3878641000167645, 0.37961112420282495, -0.20633467347707435, -0.4329274238053735, -0.5046303964150858, 0.05679763478722438, 0.29244988401839456, 0.37792749893916466, 0.18940269867245538, -0.13361635980669817, -0.10047467296611651, 0.2648958866517741, 0.34156352084890934, 0.31429278286199336, 0.23522627472277963, 0.20264778886012372, 0.1882778902908582, 0.07032996896873903, -0.08836056568546247, 0.04514068861333931, 0.054789918496538526, 0.05850554549151191, -0.4502766201844518, -0.6111144050392119, -0.3047016992723441, 0.07088197714571534, 0.21385140349463921, 0.2641469749756204, 0.16817891400485332, 0.030940716215234587, 0.19738321244238316, 0.2610974119237306, 0.22004857595293617, -0.36508643978394, -0.5823789766025508, -0.2885554776105462, 0.07114685583229324, 0.20824254907699694, 0.25887722307169253, 0.251877678257168, 0.2520710882977515, 0.2506652072299829, 0.250909309592641, 0.1904468218107966, 0.10339981700033885, 0.041274996724846726, 0.017956741766768442, 0.007350525403918857, 0.003194986108655491, 0.001459656997350553, 0.0008556284743332816, 0.0006569555950617922, 0.0010137025836160565, 0.0008200674919021204, 0.0008690802843602657, 0.0011042050047654038, 0.0010303179921074442, 0.001005391122880981, 0.0012607664075193377, 0.0010595854135524232, 0.0009873028238752135, 0.0012207656167143657, 0.0013129982459824906, 0.0010515489172137002, 0.0009508846501183263, 0.0012067507131215162, 0.0010073353761475105, 0.0009344077878293347, 0.0009296027850900258, 0.0006650361053608389, 0.0008600021640245217, 0.0009620121091822066, 0.0010404969775388608, 0.0007985119172111109, 0.001011598319266855, 0.0011134650829942201, 0.0011677917632348898, 0.0011784273877305414, 0.0014613896481579479, 0.001499510004365101, 0.0012235109763837418, 0.0008418467885719996, 0.0009969626390345931, 0.0010165001730341218, 0.0021100714885608045, 0.0015840996535695685, 0.0008471365067026192, 0.000828249180723474, 0.0005953472403109755, 0.0008293977965081606, 0.0009219007615554747, 0.0009295611332532025, 0.0009298264914060113, 0.0009322706448184441, 0.0010525974800957363, 0.001140796061666758, 0.0014091620437423798, 0.001482359539729309, 0.0011832943340148103, 0.0010653731055064453, 0.0010164900861813035, 0.0009981454325887276, 0.0007202559055182189, 0.0009164744974709156, 0.0009832389239880814, 0.0007503764730617431, 0.0009860194225202387, 0.0011084142324480038, 0.0014308523383012375, 0.0012500943772505435, 0.0014609200459963535, 0.001227259629070141, 0.001932088529054292, 0.00127528894546999, 0.001061111825197525, 0.0009042752140714858, 0.0008728834642122985, 0.0008340496926058025, 0.000870385969999523, 0.0008689533107633547, 0.0017200707807462183, 0.0011320105927258746, 0.001297354433240274, 0.001029215989030264, 0.0009555136040652057, 0.0006284025422804811, 0.0008271598738012198, 0.000876388431072149, 0.0006517863944654964, 0.0008476953090198192, 0.0010232893194640769, 0.0010946237531529457, 0.0011527219828247719, 0.0011787241946533654, 0.001456327662774648, 0.0012324042949269365, 0.0011502259331150205, 3.342972297794289e-05, 0.0010570154661279224, 0.0011097818128772106, 0.0011840134835973785, 0.0011699924422787465, 0.00200901801177443, 0.0013950134712663043, 0.0012375454939237938, 0.0011282347734195147, 0.0011225533192023539, 0.0009672747742584184, 0.0020311238652525494, 0.0014869509302851136, 0.0010172463219477214, 0.0007944149295033114, 0.000824464466476528, 0.0008187182895509557, 0.0008308182271777112, 0.0008235097277156898, 0.0008305014940306332, 0.0008249792581538351, 0.0017591014912510354, 0.001245919290535795, 0.0013429179123642526, 0.0010474413806798519, 0.0009628037607250471, 0.0011701393849661151, 0.0009696172917926897, 0.0008810394237852917, 0.0008522267763777167, 0.0008349921871213285, 0.0009236317884821522, 0.000961298239661186, 0.001004797969143878, 0.0010257597330097963, 0.001031174234937253, 0.0021437581019191215, 0.0013626628951694843, 0.0013634490990383462, 0.0010202396694933905, 0.001193455441901338, 0.0006522546060627743, 0.0007815096266697436, 0.0010587701554589206, 0.0008993516251713692, 0.001085878912504324, 0.0009908389985991521, 0.0009588259862832529, 0.0004322867987837514, 0.0008409114371510443, 0.0010075343910824867, 0.0013380702795149566, 0.001141383269463326, 0.001122638160876651, 0.0010925604607403168, 0.0011294928103021719, 0.0011308172303096282, 0.0008730605277057005, 0.0010066211638109224, 0.00105265473018068, 0.0018855851406483493]
t = np.arange(0, len(input_data)) / sampling_freq


while i <= (len(input_data)-1):
    signal_buffer.extend([input_data[i]])
    if len(signal_buffer) >= window_size:
        intensity = calculate_intensity(signal_buffer)
        intensity_of_whole_signal.extend([intensity])
        if intensity >= intensity_threshold and tremor_present == False:
            print('tremor started at:', i / sampling_freq)

        if intensity >= intensity_threshold:
            tremor_present = True
            tremor_data.extend(signal_buffer)
            tremor_intensities.extend([intensity])
        if tremor_present:
            if intensity <= intensity_threshold:
                tremor_present = False
                print('tremor ended at:', i/sampling_freq)
                calculate_values_and_append(tremor_intensities, tremor_data)
                tremor_data = []
                tremor_intensities = []

        signal_buffer = []

    i = i+1
if tremor_present:
    tremor_present = False
    calculate_values_and_append(tremor_intensities, tremor_data)
    tremor_data = []


fig, axs = plt.subplots(2)
fig.suptitle('The Filtered Input Signal and Its Intensity')
axs[0].plot(t, input_data)
axs[0].set(ylabel='Amplitude', xlabel='Time (s)')
axs[1].plot(intensity_of_whole_signal, marker='o', markerfacecolor='red', markersize=6)
axs[1].set(ylabel='Intensity', xlabel='Number of Samples')

# Print the analysis outputs
print("Dominant Frequency:", dominant_frequency_array)
print("Length:", length_array)
print("Average Intensity:", average_intensity_array)

plt.tight_layout()
plt.show()